// Generated by Skyramp v0.5.0.1c45d2eb on 2025-10-24 15:16:36.966426 -0700 PDT m=+678.934229376
// Command: skyramp generate ui rest \
// 		--framework playwright \
// 		--language typescript \
// 		--output ui_test_actions-with-parameters.spec.ts \
// 		--output-dir /Users/syedsky/Skyramp/projects/Atlassian/test-sweet-state/src/tests/ui \
// 		--overwrite true \
// 		--playwright-trace /Users/syedsky/Skyramp/projects/Atlassian/test-sweet-state/traces/actions-with-parameters/skyramp_playwright.zip \
// 		--rawTrace true \

// Import of required libraries
import { test } from '@playwright/test';
import { expect, newSkyrampPlaywrightPage } from '@skyramp/skyramp';

const pageTimeout = 15000;

/**
 * Helper function to increment counter by clicking a button and verify the result
 */
async function incrementAndVerifyCount(page: any, buttonTestId: string, expectedCount: number) {
    await page.getByTestId(buttonTestId).click();
    await expect(page.getByTestId("param-counter-value")).toContainText(`Count: ${expectedCount}`);
}

/**
 * Helper function to add a custom value and verify the result
 */
async function addCustomValueAndVerify(page: any, customValue: string, expectedCount: number) {
    await page.getByTestId("param-custom-input").click();
    await page.getByTestId("param-custom-input").fill(customValue);
    await page.getByTestId("param-add-custom").click();
    await expect(page.getByTestId("param-counter-value")).toContainText(`Count: ${expectedCount}`);
}

/**
 * Helper function to verify initial counter value
 */
async function verifyInitialCount(page: any, expectedCount: number) {
    await expect(page.getByTestId("param-counter-value")).toContainText(`Count: ${expectedCount}`);
}

test('testUi', async ({ page }) => {
    test.setTimeout(105000);
    // set default timeout for all locator/page actions in this test
    page.setDefaultTimeout(pageTimeout);

    // wrap playwright page with Skyramp page
    page = newSkyrampPlaywrightPage(page);

    await page.goto("http://localhost:4173/");
    await page.getByTestId("test-actions-with-parameters").click();
    
    // Verify initial count
    await verifyInitialCount(page, 0);
    
    // Increment by 1 and verify
    await incrementAndVerifyCount(page, "param-add-1", 1);
    
    // Increment by 10 and verify
    await incrementAndVerifyCount(page, "param-add-10", 11);
    
    // Add custom value and verify
    await addCustomValueAndVerify(page, "13", 24);
});
