// Generated by Skyramp v0.5.0.1c45d2eb on 2025-10-24 15:48:18.507158 -0700 PDT m=+2580.517996626
// Command: skyramp generate ui rest \
// 		--framework playwright \
// 		--language typescript \
// 		--output ui_test_state-persistence.spec.ts \
// 		--output-dir /Users/syedsky/Skyramp/projects/Atlassian/test-sweet-state/src/tests/ui \
// 		--overwrite true \
// 		--playwright-trace /Users/syedsky/Skyramp/projects/Atlassian/test-sweet-state/traces/state-persistence/skyramp_playwright.zip \
// 		--rawTrace true \

// Import of required libraries
import { test, Page } from '@playwright/test';
import { expect, newSkyrampPlaywrightPage } from '@skyramp/skyramp';

const pageTimeout = 15000;

/**
 * Increments the global counter by clicking the increment button multiple times
 */
async function incrementGlobalCounter(page: Page, times: number): Promise<void> {
    for (let i = 0; i < times; i++) {
        await page.getByTestId("persist-increment").click();
    }
}

/**
 * Increments the local counter by clicking the increment button multiple times
 */
async function incrementLocalCounter(page: Page, times: number): Promise<void> {
    for (let i = 0; i < times; i++) {
        await page.getByTestId("persist-increment-local").click();
    }
}

/**
 * Verifies the counter values displayed on the page
 */
async function verifyCounters(page: Page, globalCount: number, localCount: number): Promise<void> {
    await expect(page.getByTestId("persist-global-count")).toContainText(`Global Count: ${globalCount}`);
    await expect(page.getByTestId("persist-local-count")).toContainText(`Component Count: ${localCount}`);
}

/**
 * Toggles the persist state checkbox
 */
async function togglePersistence(page: Page, checked: boolean): Promise<void> {
    if (checked) {
        await page.getByTestId("persist-toggle").check();
    } else {
        await page.getByTestId("persist-toggle").uncheck();
    }
}

test('testUi', async ({ page }) => {
    test.setTimeout(176000);
    // set default timeout for all locator/page actions in this test
    page.setDefaultTimeout(pageTimeout);

    // wrap playwright page with Skyramp page
    page = newSkyrampPlaywrightPage(page);

    // Navigate to State Persistence tab
    await page.goto("http://localhost:4173/");
    await page.getByTestId("test-state-persistence").click();

    // Increment global counter 5 times
    await incrementGlobalCounter(page, 5);

    // Enable state persistence
    await togglePersistence(page, true);

    // Increment local counter 3 times
    await incrementLocalCounter(page, 3);

    // Verify both counters show correct values
    await verifyCounters(page, 5, 3);

    // Toggle persistence off and back on
    await togglePersistence(page, false);
    await togglePersistence(page, true);

    // Verify global persisted but local reset
    await verifyCounters(page, 5, 0);
});
