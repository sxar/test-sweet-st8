// Generated by Skyramp v0.5.0.1c45d2eb on 2025-10-24 15:25:29.750309 -0700 PDT m=+1211.716493501
// Command: skyramp generate ui rest \
// 		--framework playwright \
// 		--language typescript \
// 		--output ui_test_scoped-store-instances.spec.ts \
// 		--output-dir /Users/syedsky/Skyramp/projects/Atlassian/test-sweet-state/src/tests/ui \
// 		--overwrite true \
// 		--playwright-trace /Users/syedsky/Skyramp/projects/Atlassian/test-sweet-state/traces/scoped-store-instances/skyramp_playwright.zip \
// 		--rawTrace true \

// Import of required libraries
import { test } from '@playwright/test';
import { expect, newSkyrampPlaywrightPage } from '@skyramp/skyramp';

const pageTimeout = 15000;

// Helper function to add a todo item to a specific scope
async function addTodoItem(page, scope: string, text: string) {
    await page.getByTestId(`todo-input-${scope}`).click();
    await page.getByTestId(`todo-input-${scope}`).fill(text);
    await page.getByTestId(`todo-add-${scope}`).click();
}

// Helper function to verify todo counts across all scopes
async function verifyTodoCounts(page, personal: number, work: number, shopping: number) {
    await expect(page.getByTestId("todo-count-personal")).toContainText(`Tasks: ${personal}`);
    await expect(page.getByTestId("todo-count-work")).toContainText(`Tasks: ${work}`);
    await expect(page.getByTestId("todo-count-shopping")).toContainText(`Tasks: ${shopping}`);
}

test('testUi', async ({ page }) => {
    test.setTimeout(271000);
    // set default timeout for all locator/page actions in this test
    page.setDefaultTimeout(pageTimeout);

    // wrap playwright page with Skyramp page
    page = newSkyrampPlaywrightPage(page);

    await page.goto("http://localhost:4173/");
    await page.getByTestId("test-scoped-store-instances").click();
    
    // Verify initial state - all scopes have 0 tasks
    await verifyTodoCounts(page, 0, 0, 0);
    
    // Add 3 items to shopping scope
    await addTodoItem(page, "shopping", "milk");
    await addTodoItem(page, "shopping", "bread");
    await addTodoItem(page, "shopping", "eggs");
    
    // Verify only shopping scope has items
    await verifyTodoCounts(page, 0, 0, 3);
    
    // Add 1 item to personal scope
    await addTodoItem(page, "personal", "buy groceries");
    
    // Verify personal and shopping scopes have items
    await verifyTodoCounts(page, 1, 0, 3);
    
    // Add 1 item to work scope
    await addTodoItem(page, "work", "finish report");
    
    // Verify all scopes have their respective items
    await verifyTodoCounts(page, 1, 1, 3);
});
