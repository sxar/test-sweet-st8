// Generated by Skyramp v0.5.0.1c45d2eb on 2025-10-27 10:59:31.201291 -0700 PDT m=+4001.937266876
// Command: skyramp generate ui rest \
// 		--framework playwright \
// 		--language typescript \
// 		--output ui_test_multiple-stores.spec.ts \
// 		--output-dir /Users/syedsky/Skyramp/projects/Atlassian/test-sweet-state/src/tests/ui \
// 		--overwrite true \
// 		--playwright-trace /Users/syedsky/Skyramp/projects/Atlassian/test-sweet-state/traces/multiple-stores/skyramp_playwright.zip \
// 		--rawTrace true

// Import of required libraries
import { test } from '@playwright/test';
import { expect, newSkyrampPlaywrightPage } from '@skyramp/skyramp';

const pageTimeout = 15000;

/**
 * Verifies the state of all three stores: Theme, Notifications, and Counter
 */
async function verifyAllStoresState(
    page: any,
    theme: string,
    themeRenders: number,
    notifStatus: string,
    notifRenders: number,
    count: number,
    counterRenders: number
) {
    await expect(page.getByTestId("theme-current")).toContainText(`Current Theme: ${theme}`);
    await expect(page.getByTestId("theme-renders")).toContainText(`Renders: ${themeRenders}`);
    await expect(page.getByTestId("notif-status")).toContainText(`Status: ${notifStatus}`);
    await expect(page.getByTestId("notif-renders")).toContainText(`Renders: ${notifRenders}`);
    await expect(page.getByTestId("multi-counter")).toContainText(`Count: ${count}`);
    await expect(page.getByTestId("counter-renders")).toContainText(`Renders: ${counterRenders}`);
}

test('testUi', async ({ page }) => {
    test.setTimeout(317000);
    // set default timeout for all locator/page actions in this test
    page.setDefaultTimeout(pageTimeout);

    // wrap playwright page with Skyramp page
    page = newSkyrampPlaywrightPage(page);

    await page.goto("http://localhost:4173/");
    await page.getByTestId("test-multiple-stores").click();
    
    // Verify initial state
    await verifyAllStoresState(page, "light", 0, "Email: off, Push: off", 0, 0, 0);
    
    // Change theme to dark
    await page.getByTestId("theme-select").selectOption("dark");
    await verifyAllStoresState(page, "dark", 1, "Email: off, Push: off", 0, 0, 0);
    
    // Enable email notifications
    await page.getByTestId("notif-email").click();
    await verifyAllStoresState(page, "dark", 1, "Email: on, Push: off", 1, 0, 0);
    
    // Increment counter twice
    await page.getByTestId("multi-increment").click();
    await page.getByTestId("multi-increment").click();
    await verifyAllStoresState(page, "dark", 1, "Email: on, Push: off", 1, 2, 2);
});
