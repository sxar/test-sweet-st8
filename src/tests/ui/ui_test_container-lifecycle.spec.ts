// Generated by Skyramp v0.5.0.1c45d2eb on 2025-10-24 15:32:42.959961 -0700 PDT m=+1644.929496918
// Command: skyramp generate ui rest \
// 		--framework playwright \
// 		--language typescript \
// 		--output ui_test_container-lifecycle.spec.ts \
// 		--output-dir /Users/syedsky/Skyramp/projects/Atlassian/test-sweet-state/src/tests/ui \
// 		--overwrite true \
// 		--playwright-trace /Users/syedsky/Skyramp/projects/Atlassian/test-sweet-state/traces/container-lifecycle/skyramp_playwright.zip \
// 		--rawTrace true \

// Import of required libraries
import { test } from '@playwright/test';
import { expect, newSkyrampPlaywrightPage } from '@skyramp/skyramp';

const pageTimeout = 15000;

/**
 * Helper function to send a chat message
 * @param page - Playwright page object
 * @param message - Message text to send
 */
async function sendChatMessage(page, message: string) {
    await page.getByTestId("chat-input").click();
    await page.getByTestId("chat-input").fill(message);
    await page.getByTestId("chat-send").click();
}

test('testUi', async ({ page }) => {
    test.setTimeout(145000);
    // set default timeout for all locator/page actions in this test
    page.setDefaultTimeout(pageTimeout);

    // wrap playwright page with Skyramp page
    page = newSkyrampPlaywrightPage(page);

    await page.goto("http://localhost:4173/");
    await page.getByTestId("test-container-lifecycle").click();
    await expect(page.getByTestId("chat-mount-count")).toContainText("Mounts: 0");
    await page.getByTestId("chat-toggle").check();
    await expect(page.getByTestId("chat-mount-count")).toContainText("Mounts: 1");
    await sendChatMessage(page, "hello");
    await sendChatMessage(page, "world");
    await expect(page.getByTestId("chat-message-count")).toContainText("Messages: 2");
    await page.getByTestId("chat-toggle").uncheck();
    await page.getByTestId("chat-toggle").check();
    await expect(page.getByTestId("chat-mount-count")).toContainText("Mounts: 2");
    await expect(page.getByTestId("chat-message-count")).toContainText("Messages: 0");
});
